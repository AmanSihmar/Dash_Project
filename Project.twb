<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0207.2140                               -->
<workbook source-build='10.1.5 (10100.17.0207.2140)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Project_207' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column alias='Aggressive' caption='Player Selection' datatype='string' datatype-customized='true' hidden='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fast&quot;'>
        <calculation class='tableau' formula='&quot;Fast&quot;' />
        <aliases>
          <alias key='&quot;Fast&quot;' value='Aggressive' />
          <alias key='&quot;Relible&quot;' value='Orthadox' />
        </aliases>
        <members>
          <member alias='Orthadox' value='&quot;Relible&quot;' />
          <member alias='Aggressive' value='&quot;Fast&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Fast_Scorer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Relible&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='matches' inline='true' name='federated.0w71qk01afog2j1casuue0vfs13j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.0koqbi817no8fb17pp04r0lxzx9f'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='matches.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0koqbi817no8fb17pp04r0lxzx9f' name='matches.csv' table='[matches#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Apex\Documents\My Tableau Repository\Datasources\matches.tde' schema='Extract' tablename='Extract' update-time='05/30/2017 06:08:22 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='577' timestamp-start='2017-05-30 06:08:22.515' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>577.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>577.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>1</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abu Dhabi&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Visakhapatnam&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>570</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>matches.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>407</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2008-04-18#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-05-29#</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='date'>#2012-05-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dl_applied</remote-name>
              <remote-type>16</remote-type>
              <local-name>[dl_applied]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dl_applied</remote-alias>
              <ordinal>3</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.025996533795493933</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15926290716634453</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15912483786673179</statistic>
                <statistic aggregation='Var' datatype='real'>0.025364673599075679</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025320714026113675</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>4</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>166753.0</statistic>
                <statistic aggregation='Avg' datatype='real'>289.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Stdev' datatype='real'>166.70982774469738</statistic>
                <statistic aggregation='StdevP' datatype='real'>166.5653025092561</statistic>
                <statistic aggregation='Var' datatype='real'>27792.166666666668</statistic>
                <statistic aggregation='VarP' datatype='real'>27744.0</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>289</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64199905.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_of_match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_of_match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>player_of_match</remote-alias>
              <ordinal>5</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Chandila&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>574</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result</remote-name>
              <remote-type>129</remote-type>
              <local-name>[result]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>result</remote-alias>
              <ordinal>6</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;no result&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tie&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>2</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>7</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1160941.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2012.0294627383016</statistic>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.4862465900795261</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.4840911960115379</statistic>
                <statistic aggregation='Var' datatype='real'>6.1814221066820716</statistic>
                <statistic aggregation='VarP' datatype='real'>6.170709070102034</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>2012</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2335851057.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team1</remote-alias>
              <ordinal>8</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team2</remote-alias>
              <ordinal>9</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_decision]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_decision</remote-alias>
              <ordinal>10</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bat&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;field&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_winner</remote-alias>
              <ordinal>11</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire1</remote-alias>
              <ordinal>12</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Nand Kishore&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VA Kulkarni&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire2</remote-alias>
              <ordinal>13</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Nand Kishore&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VK Sharma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire3</remote-alias>
              <ordinal>14</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue</remote-alias>
              <ordinal>15</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Barabati Stadium&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wankhede Stadium&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_runs</remote-name>
              <remote-type>2</remote-type>
              <local-name>[win_by_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_runs</remote-alias>
              <ordinal>16</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7914.0</statistic>
                <statistic aggregation='Avg' datatype='real'>13.7157712305026</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Stdev' datatype='real'>23.619281586069</statistic>
                <statistic aggregation='StdevP' datatype='real'>23.598805395322721</statistic>
                <statistic aggregation='Var' datatype='real'>557.87046264201808</statistic>
                <statistic aggregation='VarP' datatype='real'>556.9036160863127</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>429880.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_wickets</remote-name>
              <remote-type>16</remote-type>
              <local-name>[win_by_wickets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_wickets</remote-alias>
              <ordinal>17</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1941.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.3639514731369151</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.4160492812729593</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.4130878162331717</statistic>
                <statistic aggregation='Var' datatype='real'>11.6693926920855</statistic>
                <statistic aggregation='VarP' datatype='real'>11.64916844131932</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13251.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>winner</remote-alias>
              <ordinal>18</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>574</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.762712' measure-ordering='alphabetic' measure-percentage='0.181598' parameter-percentage='0.0556901' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='match_detail1' inline='true' name='federated.0qhgn4r0hrogvy18255uq00i5q9x' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='match_detail1' name='textscan.1lmyt6r0n5652911lde9n1buazim'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='match_detail1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lmyt6r0n5652911lde9n1buazim' name='match_detail1.csv' table='[match_detail1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='ID' ordinal='1' />
            <column datatype='date' name='DATE' ordinal='2' />
            <column datatype='string' name='TOSS_WINNER' ordinal='3' />
            <column datatype='string' name='WINNER' ordinal='4' />
            <column datatype='string' name='PLAYER_OF_MATCH' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOSS_WINNER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOSS_WINNER]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>TOSS_WINNER</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WINNER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WINNER]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>WINNER</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_OF_MATCH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLAYER_OF_MATCH]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>PLAYER_OF_MATCH</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Toss and win' datatype='real' name='[Calculation_429249351455879172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count (if  [TOSS_WINNER]= [WINNER] then [WINNER] end)/count([TOSS_WINNER])' />
      </column>
      <column caption='Toss and Lost' datatype='real' name='[Calculation_429249351457308678]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count (if  [TOSS_WINNER]!= [WINNER] then [TOSS_WINNER] end)/count([TOSS_WINNER])' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[TOSS_WINNER]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[WINNER]' role='dimension' type='nominal' />
      <column-instance column='[PLAYER_OF_MATCH]' derivation='Count' name='[cnt:PLAYER_OF_MATCH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PLAYER_OF_MATCH]' derivation='None' name='[none:PLAYER_OF_MATCH:nk]' pivot='key' type='nominal' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Apex\Documents\My Tableau Repository\Datasources\match_detail1.tde' schema='Extract' tablename='Extract' update-time='05/30/2017 06:06:58 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='577' timestamp-start='2017-05-30 06:06:58.786' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>0</ordinal>
              <family>match_detail1.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>407</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2008-04-18#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-05-29#</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='date'>#2012-05-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>match_detail1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>166176.0</statistic>
                <statistic aggregation='Avg' datatype='real'>288.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>576</statistic>
                <statistic aggregation='Stdev' datatype='real'>166.70982774469738</statistic>
                <statistic aggregation='StdevP' datatype='real'>166.5653025092561</statistic>
                <statistic aggregation='Var' datatype='real'>27792.166666666668</statistic>
                <statistic aggregation='VarP' datatype='real'>27744.0</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>288</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>63866976.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>2</ordinal>
              <family>match_detail1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>166753.0</statistic>
                <statistic aggregation='Avg' datatype='real'>289.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Stdev' datatype='real'>166.70982774469738</statistic>
                <statistic aggregation='StdevP' datatype='real'>166.5653025092561</statistic>
                <statistic aggregation='Var' datatype='real'>27792.166666666668</statistic>
                <statistic aggregation='VarP' datatype='real'>27744.0</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>289</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64199905.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>577.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>577.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_OF_MATCH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLAYER_OF_MATCH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLAYER_OF_MATCH</remote-alias>
              <ordinal>4</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Chandila&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>574</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOSS_WINNER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TOSS_WINNER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOSS_WINNER</remote-alias>
              <ordinal>5</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WINNER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WINNER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WINNER</remote-alias>
              <ordinal>6</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>574</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.525' measure-ordering='alphabetic' measure-percentage='0.475' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[cnt:PLAYER_OF_MATCH:qk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PLAYER_OF_MATCH:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Player_details' inline='true' name='federated.1vtddjr1yvcl8k13ibju01vi873w' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Player_details1' name='textscan.1vtgjzx1pb5z451cfi16q1lwg603'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='Player_details1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='match_detail1' name='textscan.16ite30136q16x1e1ungj15ft1gf'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='match_detail1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Player_details1 (2)' name='textscan.09eefi60pcngz81c8tkjw0hrs3wq'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='Player_details1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='match_detail1 (2)' name='textscan.1gghsl40jofhpl1frb37r0ru37q1'>
            <connection class='textscan' directory='C:/Users/Apex/Downloads/SAD/Dash_Project' filename='match_detail1.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Player_details1.csv].[MATCH_ID]' />
              <expression op='[match_detail1.csv].[ID]' />
            </expression>
          </clause>
          <relation connection='textscan.09eefi60pcngz81c8tkjw0hrs3wq' name='Player_details1.csv' table='[Player_details1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='MATCH_ID' ordinal='1' />
              <column datatype='integer' name='OVER' ordinal='2' />
              <column datatype='integer' name='BALL' ordinal='3' />
              <column datatype='string' name='BATSMAN' ordinal='4' />
              <column datatype='string' name='BOWLER' ordinal='5' />
              <column datatype='integer' name='BATSMAN_RUNS' ordinal='6' />
              <column datatype='integer' name='TOTAL_RUNS' ordinal='7' />
              <column datatype='string' name='PLAYER_DISMISSED' ordinal='8' />
              <column datatype='string' name='DISMISSAL_KIND' ordinal='9' />
              <column datatype='string' name='FIELDER' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1gghsl40jofhpl1frb37r0ru37q1' name='match_detail1.csv' table='[match_detail1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='ID' ordinal='1' />
              <column datatype='date' name='DATE' ordinal='2' />
              <column datatype='string' name='TOSS_WINNER' ordinal='3' />
              <column datatype='string' name='WINNER' ordinal='4' />
              <column datatype='string' name='PLAYER_OF_MATCH' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[BALL]' value='[Player_details1.csv].[BALL]' />
          <map key='[BATSMAN]' value='[Player_details1.csv].[BATSMAN]' />
          <map key='[BATSMAN_RUNS]' value='[Player_details1.csv].[BATSMAN_RUNS]' />
          <map key='[BOWLER]' value='[Player_details1.csv].[BOWLER]' />
          <map key='[DATE]' value='[match_detail1.csv].[DATE]' />
          <map key='[DISMISSAL_KIND]' value='[Player_details1.csv].[DISMISSAL_KIND]' />
          <map key='[F1 (match_detail1.csv)]' value='[match_detail1.csv].[F1]' />
          <map key='[F1]' value='[Player_details1.csv].[F1]' />
          <map key='[FIELDER]' value='[Player_details1.csv].[FIELDER]' />
          <map key='[ID]' value='[match_detail1.csv].[ID]' />
          <map key='[MATCH_ID]' value='[Player_details1.csv].[MATCH_ID]' />
          <map key='[OVER]' value='[Player_details1.csv].[OVER]' />
          <map key='[PLAYER_DISMISSED]' value='[Player_details1.csv].[PLAYER_DISMISSED]' />
          <map key='[PLAYER_OF_MATCH]' value='[match_detail1.csv].[PLAYER_OF_MATCH]' />
          <map key='[TOSS_WINNER]' value='[match_detail1.csv].[TOSS_WINNER]' />
          <map key='[TOTAL_RUNS]' value='[Player_details1.csv].[TOTAL_RUNS]' />
          <map key='[WINNER]' value='[match_detail1.csv].[WINNER]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MATCH_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MATCH_ID]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>MATCH_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OVER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OVER]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>OVER</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BALL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BALL]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>BALL</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BATSMAN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BATSMAN]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>BATSMAN</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOWLER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOWLER]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>BOWLER</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BATSMAN_RUNS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BATSMAN_RUNS]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>BATSMAN_RUNS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_RUNS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_RUNS]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>TOTAL_RUNS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_DISMISSED</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLAYER_DISMISSED]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>PLAYER_DISMISSED</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISMISSAL_KIND</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISMISSAL_KIND]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>DISMISSAL_KIND</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELDER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIELDER]</local-name>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias>FIELDER</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Player_details1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (match_detail1.csv)]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOSS_WINNER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOSS_WINNER]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>TOSS_WINNER</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WINNER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WINNER]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>WINNER</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_OF_MATCH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLAYER_OF_MATCH]</local-name>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias>PLAYER_OF_MATCH</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[match_detail1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
      <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
      <column caption='% Runs in boundries' datatype='real' name='[Calculation_429249351264952320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [BATSMAN_RUNS]=4 or [BATSMAN_RUNS]=6 then [BATSMAN_RUNS] end)/SUM([BATSMAN_RUNS])*100' />
      </column>
      <column caption='6s' datatype='integer' name='[Calculation_429249351359537153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count(if [BATSMAN_RUNS]= 6 then [BATSMAN_RUNS] end)' />
      </column>
      <column caption='Dot Balls' datatype='integer' name='[Calculation_429249351412912130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count( if [TOTAL_RUNS]=0 then[TOTAL_RUNS] end)' />
      </column>
      <column caption='Economy' datatype='real' datatype-customized='true' name='[Calculation_429249351430565891]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='float(SUM([TOTAL_RUNS])/(count([BALL])/6))' />
      </column>
      <column caption='Strike_Rate' datatype='real' name='[Calculation_524950842134679552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([BALL])*100' />
      </column>
      <column caption='Batting_Average' datatype='real' name='[Calculation_524950842135699457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([PLAYER_DISMISSED])' />
      </column>
      <column caption='Strike_Rate_Bowling' datatype='real' name='[Calculation_524950842145861634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([BALL])/count([DISMISSAL_KIND])' />
      </column>
      <column caption='Average_Bowling' datatype='real' name='[Calculation_524950842286788612]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([TOTAL_RUNS])/count([PLAYER_DISMISSED])' />
      </column>
      <column caption='Total_Overs_Bowled' datatype='real' name='[Calculation_524950842287804421]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([BALL])/6' />
      </column>
      <column caption='Strike Rate(Aggressive Batsmen)/Batting Avg(for Orthadox Batsmen)' datatype='real' name='[Calculation_524950842294910982]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1]=&apos;Fast&apos;then [Calculation_524950842134679552]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Relible&apos; then [Calculation_524950842135699457]&#13;&#10;end' />
        <desc>
          <formatted-text>
            <run>This field displays the Batting_Average, if the parameter selection is&quot;Relible&quot;, If parameter selection is &quot;Fast Scorer&quot;then it displays Batting Strike Rate</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total Wickets' datatype='integer' name='[Calculation_652740483584176129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([PLAYER_DISMISSED])' />
      </column>
      <column caption='Average_bat' datatype='real' name='[Calculation_652740483586637827]' role='measure' type='quantitative' visual-totals='Avg'>
        <calculation class='tableau' formula='AVG([BATSMAN_RUNS])' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[DISMISSAL_KIND]' role='dimension' type='nominal' />
      <column caption='F1 (match detail1.csv)' datatype='integer' name='[F1 (match_detail1.csv)]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[FIELDER]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Match Id' datatype='integer' name='[MATCH_ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Over' datatype='integer' name='[OVER]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[PLAYER_DISMISSED]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[TOSS_WINNER]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[TOTAL_RUNS]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[WINNER]' role='dimension' type='nominal' />
      <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
      <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Batsman)' hidden='true' name='[Action (Batsman)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BATSMAN]' />
        </groupfilter>
      </group>
      <group caption='Action (Batsman,YEAR(Date))' hidden='true' name='[Action (Batsman,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BATSMAN]' />
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Bowler)' hidden='true' name='[Action (Bowler)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOWLER]' />
        </groupfilter>
      </group>
      <group caption='Action (Bowler,YEAR(Date))' hidden='true' name='[Action (Bowler,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOWLER]' />
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Player Of Match)' hidden='true' name='[Action (YEAR(Date),Player Of Match)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[PLAYER_OF_MATCH]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Apex\Documents\My Tableau Repository\Datasources\Player_details.tde' schema='Extract' tablename='Extract' update-time='05/30/2017 06:01:06 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[BALL]' value='[Extract].[BALL]' />
            <map key='[BATSMAN]' value='[Extract].[BATSMAN]' />
            <map key='[BATSMAN_RUNS]' value='[Extract].[BATSMAN_RUNS]' />
            <map key='[BOWLER]' value='[Extract].[BOWLER]' />
            <map key='[DATE]' value='[Extract].[DATE]' />
            <map key='[DISMISSAL_KIND]' value='[Extract].[DISMISSAL_KIND]' />
            <map key='[F1 (match_detail1.csv)]' value='[Extract].[F1]' />
            <map key='[F1]' value='[Extract].[F11]' />
            <map key='[FIELDER]' value='[Extract].[FIELDER]' />
            <map key='[ID]' value='[Extract].[ID]' />
            <map key='[MATCH_ID]' value='[Extract].[MATCH_ID]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[OVER]' value='[Extract].[OVER]' />
            <map key='[PLAYER_DISMISSED]' value='[Extract].[PLAYER_DISMISSED]' />
            <map key='[PLAYER_OF_MATCH]' value='[Extract].[PLAYER_OF_MATCH]' />
            <map key='[TOSS_WINNER]' value='[Extract].[TOSS_WINNER]' />
            <map key='[TOTAL_RUNS]' value='[Extract].[TOTAL_RUNS]' />
            <map key='[WINNER]' value='[Extract].[WINNER]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='136598' timestamp-start='2017-05-30 06:01:06.783' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>BALL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[BALL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BALL</remote-alias>
              <ordinal>0</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>494092.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.6171247016793804</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.8081996228168635</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.808193004114788</statistic>
                <statistic aggregation='Var' datatype='real'>3.2695858759550473</statistic>
                <statistic aggregation='VarP' datatype='real'>3.2695619401296621</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2233808.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BATSMAN</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BATSMAN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BATSMAN</remote-alias>
              <ordinal>1</ordinal>
              <family>Player_details1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>436</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BATSMAN_RUNS</remote-name>
              <remote-type>16</remote-type>
              <local-name>[BATSMAN_RUNS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BATSMAN_RUNS</remote-alias>
              <ordinal>2</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>166009.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2153106194819836</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5896537749507405</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5896479562100403</statistic>
                <statistic aggregation='Var' datatype='real'>2.5269991242151391</statistic>
                <statistic aggregation='VarP' datatype='real'>2.526980624682758</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>546933.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BOWLER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOWLER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOWLER</remote-alias>
              <ordinal>3</ordinal>
              <family>Player_details1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>334</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>4</ordinal>
              <family>match_detail1.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>407</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2008-04-18#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-05-29#</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='Median' datatype='date'>#2012-05-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DISMISSAL_KIND</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DISMISSAL_KIND]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DISMISSAL_KIND</remote-alias>
              <ordinal>5</ordinal>
              <family>Player_details1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bowled&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;stumped&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6727</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1 (match_detail1.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>6</ordinal>
              <family>match_detail1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>576</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F11</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F11</remote-alias>
              <ordinal>7</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136598</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9329438503.0</statistic>
                <statistic aggregation='Avg' datatype='real'>68298.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>136597</statistic>
                <statistic aggregation='Stdev' datatype='real'>39432.590372685394</statistic>
                <statistic aggregation='StdevP' datatype='real'>39432.4460343256</statistic>
                <statistic aggregation='Var' datatype='real'>1554929183.5000007</statistic>
                <statistic aggregation='VarP' datatype='real'>1554917800.2500007</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>849585317275695.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FIELDER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FIELDER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIELDER</remote-alias>
              <ordinal>8</ordinal>
              <family>Player_details1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>422</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4871</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>9</ordinal>
              <family>match_detail1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MATCH_ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[MATCH_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MATCH_ID</remote-alias>
              <ordinal>10</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>11</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OVER</remote-name>
              <remote-type>16</remote-type>
              <local-name>[OVER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OVER</remote-alias>
              <ordinal>12</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>20</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_DISMISSED</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLAYER_DISMISSED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLAYER_DISMISSED</remote-alias>
              <ordinal>13</ordinal>
              <family>Player_details1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>413</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6727</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_OF_MATCH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLAYER_OF_MATCH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLAYER_OF_MATCH</remote-alias>
              <ordinal>14</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Chandila&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136277</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOSS_WINNER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TOSS_WINNER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOSS_WINNER</remote-alias>
              <ordinal>15</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOTAL_RUNS</remote-name>
              <remote-type>16</remote-type>
              <local-name>[TOTAL_RUNS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOTAL_RUNS</remote-alias>
              <ordinal>16</ordinal>
              <family>Player_details1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>175528.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2849968520768971</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.579013518792959</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5790077389996653</statistic>
                <statistic aggregation='Var' datatype='real'>2.4932836925309223</statistic>
                <statistic aggregation='VarP' datatype='real'>2.4932654398208349</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>566128.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WINNER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WINNER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WINNER</remote-alias>
              <ordinal>17</ordinal>
              <family>match_detail1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136277</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.386364' measure-ordering='alphabetic' measure-percentage='0.613636' rowDisplayCount='577' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BOWLER:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Suyal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C Ganapathy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Bose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B Brainder Sran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AM Salvi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GS Sandhu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T Shamsi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SS Sarkar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;K Santokie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MG Neser&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Amarnath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B Geeves&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P Prasanth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RW Price&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandeep Sharma (1)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Kazi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anand Rajan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MB Parmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shami Ahmed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SS Mundhe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gagandeep Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JW Hastings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Nel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SM Boland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RA Shaikh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TP Sudhindra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:BATSMAN:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#156c36'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#156d36'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#156d37'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#166d37'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#166d37'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#176e37'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#176e38'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#176e38'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#186e38'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#186f38'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#196f38'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#196f39'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#196f39'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#1a7039'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#1a7039'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
            <map to='#1b703a'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#1b703a'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#1b713a'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#1c713a'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#1c713b'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#1c713b'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#1d723b'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#1e723b'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#1e723c'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#1e733c'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#1f733c'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#1f733c'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#20733d'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#20743d'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#20743d'>
              <bucket>&quot;U Kaul&quot;</bucket>
            </map>
            <map to='#21743d'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#21743e'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#23753e'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#23763f'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#24763f'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#24763f'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#24763f'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#267740'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#267841'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#267841'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#277841'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#277941'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#277941'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#287942'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#287942'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#297a42'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#297a43'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#297b43'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#297b43'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#2a7b43'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#2a7b44'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#2a7c44'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#2d7e45'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#2d7e46'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#2d7e46'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#2e7e46'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#2e7f46'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#2e7f47'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#2f7f47'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#2f7f47'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#2f8047'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#308047'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#308048'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#308148'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#318148'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#318148'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#318149'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Sandeep Sharma (1)&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#35854a'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#35854b'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#35854b'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#37874c'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#3a8a4c'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;RS Sodhi&quot;</bucket>
            </map>
            <map to='#3c8c4d'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#3c8c4d'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#3c8c4e'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#3c8c4e'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#3f904f'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#41924f'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#429250'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#429250'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#429350'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#439450'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#449450'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#449450'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#449550'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#449550'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#459551'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#459651'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#459651'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#469651'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#469651'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#469751'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#469751'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#479751'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#499952'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;NK Patel&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#4c9c53'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#4c9c53'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#4d9d53'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#4d9d53'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#4e9d53'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#4e9d53'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#4f9e53'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#4f9e53'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#509e53'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#509e53'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#519e53'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#519f53'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#529f54'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#529f54'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#539f54'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#53a054'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#54a054'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#54a054'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#55a054'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#55a154'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#56a154'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#56a154'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#57a154'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#57a154'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#58a254'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#58a254'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#59a255'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#59a255'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#59a355'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#5aa355'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#5aa355'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#5ba355'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#5ba455'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#5ca455'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#5ca455'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#5da455'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#5da455'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#5ea555'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#5ea555'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#5fa555'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#5fa555'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#61a656'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#62a656'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#62a756'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#63a756'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#64a756'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#64a856'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#65a856'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#66a856'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#66a856'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#67a956'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#68a956'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#68a956'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#69aa56'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#69aa56'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#6aaa56'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#6baa56'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#6bab56'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#6cab56'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#6dab56'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#6dab56'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#6eac56'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#6fac56'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#6fac56'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#70ad56'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#71ad56'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#71ad56'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#72ad56'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#72ae56'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#73ae56'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#74ae56'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#74ae56'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#75af56'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#76af56'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#76af56'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#77b056'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#78b056'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#78b056'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#79b056'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#7ab156'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#7bb156'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#7cb257'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#7cb257'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#7db257'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#7db257'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#7eb257'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#7fb357'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#7fb357'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#80b357'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#81b357'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#81b357'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#82b457'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#83b457'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#83b457'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#84b457'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#85b457'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#85b557'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#86b557'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#86b557'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#87b557'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#88b557'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#88b657'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#89b657'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#8ab658'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#8ab658'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#8bb658'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#8cb758'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#8cb758'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#8db758'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#8eb758'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#8fb858'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#8fb858'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#90b858'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#91b858'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#91b958'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#92b958'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#93b958'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#93b958'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#94b958'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#95ba58'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#95ba58'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#96ba58'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#97ba58'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#98bb59'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#99bb59'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#99bb59'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#9abb59'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#9bbb59'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#9bbc59'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#9cbc59'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#9dbc59'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#9dbc59'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#9ebc59'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#9fbc59'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#9fbd59'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#a0bd59'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#a1bd59'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#a2bd5a'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#a2bd5a'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#a3be5a'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#a4be5a'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#a4be5a'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#a5be5a'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#a6be5a'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#a6be5a'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#a7bf5a'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#a8bf5a'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#a8bf5a'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#a9bf5a'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#aabf5a'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#aac05a'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#abc05a'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#acc05b'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#adc05b'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#adc05b'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#aec05b'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#afc15b'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#afc15b'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#b0c15b'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#b1c15b'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#b1c15b'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#b2c25b'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#b3c25b'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#b3c25b'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#b4c25b'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#b5c25b'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#b6c35c'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#b6c35c'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#b7c35c'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#b8c35c'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#b8c35c'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#b9c35c'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#bac35c'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#bac45c'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#bbc45c'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#bcc45c'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#bdc45d'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#bec45d'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#bfc55d'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#bfc55d'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#c0c55d'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#c1c55d'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#c2c55d'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#c2c55d'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#c3c65d'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#c4c65d'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#c4c65d'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#c5c65e'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#c6c65e'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#c7c65e'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#c7c75e'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#c8c75e'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#c9c75e'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#c9c75e'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#cac75e'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#cbc75e'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#ccc75e'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#ccc85e'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#cdc85f'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#cec85f'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#cec85f'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#cfc85f'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#d0c85f'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#d1c95f'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#d1c95f'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#d2c95f'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#d3c95f'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#d3c95f'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#d4c95f'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#d5ca60'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#d6ca60'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#d6ca60'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#d7ca60'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#d8ca60'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#d8ca60'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#d9cb60'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#dacb61'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#dbcb61'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#dbcb61'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#dccb61'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#ddcb61'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#ddcc61'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#decc61'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#dfcc62'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#e0cc62'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#e0cc62'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#e1cc62'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#e2cc62'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#e2cd62'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#e3cd62'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#e4cd62'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#e5cd63'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#e5cd63'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#e7ce63'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#e7ce63'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#e8ce63'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#e9ce63'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#eace64'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#eace64'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#ebcf64'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#eccf64'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#eccf64'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#edcf64'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#eecf64'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#efcf65'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#efd065'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#f0d065'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#f1d065'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#f1d065'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#f2d065'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#f3d065'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Aggressive' caption='Player Selection' datatype='string' datatype-customized='true' hidden='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fast&quot;'>
          <calculation class='tableau' formula='&quot;Fast&quot;' />
          <aliases>
            <alias key='&quot;Fast&quot;' value='Aggressive' />
            <alias key='&quot;Relible&quot;' value='Orthadox' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='SR' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Batsman_Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batsman_Dashboard' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling_Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling_Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% Runs in Boundries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Runs in boundaries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='% Runs in boundries' datatype='real' name='[Calculation_429249351264952320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [BATSMAN_RUNS]=4 or [BATSMAN_RUNS]=6 then [BATSMAN_RUNS] end)/SUM([BATSMAN_RUNS])*100' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429249351264952320]' derivation='User' name='[usr:Calculation_429249351264952320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]'>
            <groupfilter function='member' level='[BATSMAN]' member='&quot;CH Gayle&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[PLAYER_OF_MATCH]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351264952320:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Batsman_Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Batsman Records(</run>
            <run fontname='Tableau Light'> Press ctrl to select and compare)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='6s' datatype='integer' name='[Calculation_429249351359537153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count(if [BATSMAN_RUNS]= 6 then [BATSMAN_RUNS] end)' />
            </column>
            <column caption='Strike_Rate' datatype='real' name='[Calculation_524950842134679552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([BALL])*100' />
            </column>
            <column caption='Batting_Average' datatype='real' name='[Calculation_524950842135699457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([PLAYER_DISMISSED])' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Dismissed' datatype='string' name='[PLAYER_DISMISSED]' role='dimension' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[BATSMAN_RUNS]' derivation='Sum' name='[sum:BATSMAN_RUNS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_429249351359537153]' derivation='User' name='[usr:Calculation_429249351359537153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_524950842134679552]' derivation='User' name='[usr:Calculation_524950842134679552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_524950842135699457]' derivation='User' name='[usr:Calculation_524950842135699457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351359537153:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351359537153:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[PLAYER_OF_MATCH]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' direction='DESC' using='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351359537153:qk]' />
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]' included-values='in-range'>
            <min>72</min>
            <max>4115</max>
          </filter>
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]' included-values='in-range'>
            <min>28.0</min>
            <max>207.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]' included-values='in-range'>
            <min>18.0</min>
            <max>83.0</max>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]' min='1' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' value='Year '>
              <formatted-text>
                <run>Year </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Batsmen_run'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Batsmen_runs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[BATSMAN_RUNS]' derivation='Sum' name='[sum:BATSMAN_RUNS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]'>
            <groupfilter function='member' level='[BATSMAN]' member='&quot;CH Gayle&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Batting_Avg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Batting Avg</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='Batting_Average' datatype='real' name='[Calculation_524950842135699457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([PLAYER_DISMISSED])' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Dismissed' datatype='string' name='[PLAYER_DISMISSED]' role='dimension' type='nominal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_524950842135699457]' derivation='User' name='[usr:Calculation_524950842135699457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]'>
            <groupfilter function='member' level='[BATSMAN]' member='&quot;CH Gayle&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Batting_SR'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Strike_Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='Strike_Rate' datatype='real' name='[Calculation_524950842134679552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([BALL])*100' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_524950842134679552]' derivation='User' name='[usr:Calculation_524950842134679552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_524950842134679552]' derivation='User' name='[win:usr:Calculation_524950842134679552:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]'>
            <groupfilter function='member' level='[BATSMAN]' member='&quot;CH Gayle&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[PLAYER_OF_MATCH]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]' value='77' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' />
              <lod column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[win:usr:Calculation_524950842134679552:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Bowlers_Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bowler(</run>
            <run fontname='Tableau Light'> Press ctrl to select and compare)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Economy' datatype='real' datatype-customized='true' name='[Calculation_429249351430565891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(SUM([TOTAL_RUNS])/(count([BALL])/6))' />
            </column>
            <column caption='Strike_Rate_Bowling' datatype='real' name='[Calculation_524950842145861634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([BALL])/count([DISMISSAL_KIND])' />
            </column>
            <column caption='Total Wickets' datatype='integer' name='[Calculation_652740483584176129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([PLAYER_DISMISSED])' />
            </column>
            <column caption='Dismissal Kind' datatype='string' name='[DISMISSAL_KIND]' role='dimension' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[PLAYER_DISMISSED]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[TOTAL_RUNS]' role='measure' type='quantitative' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429249351430565891]' derivation='User' name='[usr:Calculation_429249351430565891:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_524950842145861634]' derivation='User' name='[usr:Calculation_524950842145861634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_652740483584176129]' derivation='User' name='[usr:Calculation_652740483584176129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' direction='DESC' using='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]' />
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]' included-values='in-range-or-null'>
            <min>0.0</min>
            <max>23.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]' included-values='all' />
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]' value='124' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Bowling_SR'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bowling </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Strike_Rate_Bowling' datatype='real' name='[Calculation_524950842145861634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([BALL])/count([DISMISSAL_KIND])' />
            </column>
            <column caption='Total_Overs_Bowled' datatype='real' name='[Calculation_524950842287804421]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([BALL])/6' />
            </column>
            <column caption='Dismissal Kind' datatype='string' name='[DISMISSAL_KIND]' role='dimension' type='nominal' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_524950842145861634]' derivation='User' name='[usr:Calculation_524950842145861634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_524950842287804421]' derivation='User' name='[usr:Calculation_524950842287804421:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' direction='ASC' using='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]' />
          <filter class='quantitative' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842287804421:qk]' included-values='in-range'>
            <min>116.0</min>
            <max>457.0</max>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842287804421:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dot Balls'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dot Balls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Dot Balls' datatype='integer' name='[Calculation_429249351412912130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count( if [TOTAL_RUNS]=0 then[TOTAL_RUNS] end)' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Total Runs' datatype='integer' name='[TOTAL_RUNS]' role='measure' type='quantitative' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429249351412912130]' derivation='User' name='[usr:Calculation_429249351412912130:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]'>
            <groupfilter function='member' level='[BOWLER]' member='&quot;SL Malinga&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351412912130:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Economy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Economy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Economy' datatype='real' datatype-customized='true' name='[Calculation_429249351430565891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(SUM([TOTAL_RUNS])/(count([BALL])/6))' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Total Runs' datatype='integer' name='[TOTAL_RUNS]' role='measure' type='quantitative' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429249351430565891]' derivation='User' name='[usr:Calculation_429249351430565891:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]'>
            <groupfilter function='member' level='[BOWLER]' member='&quot;SL Malinga&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' value='Year '>
              <formatted-text>
                <run>Year </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Player of the match'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player of the Match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='match_detail1' name='federated.0qhgn4r0hrogvy18255uq00i5q9x' />
          </datasources>
          <datasource-dependencies datasource='federated.0qhgn4r0hrogvy18255uq00i5q9x'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
            <column-instance column='[PLAYER_OF_MATCH]' derivation='Count' name='[cnt:PLAYER_OF_MATCH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_OF_MATCH]' derivation='None' name='[none:PLAYER_OF_MATCH:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qhgn4r0hrogvy18255uq00i5q9x].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0qhgn4r0hrogvy18255uq00i5q9x].[none:PLAYER_OF_MATCH:nk]' direction='DESC' using='[federated.0qhgn4r0hrogvy18255uq00i5q9x].[cnt:PLAYER_OF_MATCH:qk]' />
          <slices>
            <column>[federated.0qhgn4r0hrogvy18255uq00i5q9x].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0qhgn4r0hrogvy18255uq00i5q9x].[cnt:PLAYER_OF_MATCH:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0qhgn4r0hrogvy18255uq00i5q9x].[none:PLAYER_OF_MATCH:nk]</rows>
        <cols>[federated.0qhgn4r0hrogvy18255uq00i5q9x].[cnt:PLAYER_OF_MATCH:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sixes Hit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Sixes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Batsman' datatype='string' name='[BATSMAN]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[BATSMAN_RUNS]' role='measure' type='quantitative' />
            <column caption='6s' datatype='integer' name='[Calculation_429249351359537153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count(if [BATSMAN_RUNS]= 6 then [BATSMAN_RUNS] end)' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Of Match' datatype='string' name='[PLAYER_OF_MATCH]' role='dimension' type='nominal' />
            <column-instance column='[BATSMAN]' derivation='None' name='[none:BATSMAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429249351359537153]' derivation='User' name='[usr:Calculation_429249351359537153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]'>
            <groupfilter function='member' level='[BATSMAN]' member='&quot;CH Gayle&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BATSMAN]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[PLAYER_OF_MATCH]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman,YEAR(Date))]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Batsman)]</column>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (YEAR(Date),Player Of Match)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' value='Year '>
              <formatted-text>
                <run>Year </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351359537153:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Strike_Bowling'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Strike Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Ball' datatype='integer' name='[BALL]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Strike_Rate_Bowling' datatype='real' name='[Calculation_524950842145861634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([BALL])/count([DISMISSAL_KIND])' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Dismissal Kind' datatype='string' name='[DISMISSAL_KIND]' role='dimension' type='nominal' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_524950842145861634]' derivation='User' name='[usr:Calculation_524950842145861634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]'>
            <groupfilter function='member' level='[BOWLER]' member='&quot;SL Malinga&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' value='65' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Wickets'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Wickets Taken</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
          </datasources>
          <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
            <column caption='Bowler' datatype='string' name='[BOWLER]' role='dimension' type='nominal' />
            <column caption='Total Wickets' datatype='integer' name='[Calculation_652740483584176129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([PLAYER_DISMISSED])' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Player Dismissed' datatype='string' name='[PLAYER_DISMISSED]' role='dimension' type='nominal' />
            <column-instance column='[BOWLER]' derivation='None' name='[none:BOWLER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_652740483584176129]' derivation='User' name='[usr:Calculation_652740483584176129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]'>
            <groupfilter function='member' level='[BOWLER]' member='&quot;SL Malinga&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vtddjr1yvcl8k13ibju01vi873w].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]</rows>
        <cols>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Batsman_Dashboard'>
      <style>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_21' value='#f0f3fa' />
          <format attr='border-style' id='dash-zone_21' value='solid' />
          <format attr='border-color' id='dash-zone_21' value='#76b7b2' />
          <format attr='border-color' id='dash-zone_25' value='#76b7b2' />
          <format attr='border-style' id='dash-zone_25' value='solid' />
          <format attr='background-color' id='dash-zone_25' value='#00ffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
      </datasources>
      <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
        <column caption='Strike_Rate' datatype='real' name='[Calculation_524950842134679552]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([BALL])*100' />
        </column>
        <column caption='Batting_Average' datatype='real' name='[Calculation_524950842135699457]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([BATSMAN_RUNS])/COUNT([PLAYER_DISMISSED])' />
        </column>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_524950842134679552]' derivation='User' name='[usr:Calculation_524950842134679552:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_524950842135699457]' derivation='User' name='[usr:Calculation_524950842135699457:qk]' pivot='key' type='quantitative' />
        <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='18875' id='16' name='Batting_Avg' w='48100' x='50800' y='28125' />
        <zone h='22375' id='17' name='Batting_SR' w='52400' x='100' y='49500' />
        <zone h='20375' id='18' name='% Runs in Boundries' w='43100' x='1900' y='75625' />
        <zone h='24625' id='19' name='Sixes Hit' w='53200' x='45300' y='72750' />
        <zone h='24375' id='20' name='Batsmen_run' w='45400' x='52200' y='48250' />
        <zone h='20125' id='25' param='vert' type='layout-flow' w='33300' x='58600' y='4875'>
          <zone h='6500' id='13' mode='checkdropdown' name='Sixes Hit' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' type='filter' w='32900' x='58800' y='5125' />
          <zone h='6375' id='29' name='Batsman_Details' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='32900' x='58800' y='11625' />
          <zone h='6375' id='27' name='Batsman_Details' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='32900' x='58800' y='18000' />
        </zone>
        <zone h='45125' id='26' name='Batsman_Details' w='49600' x='1300' y='3750'>
          <layout-cache fixed-size-w='424' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bowling_Dashboard'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-color' id='dash-zone_10' value='#d3b348' />
          <format attr='border-style' id='dash-zone_10' value='solid' />
          <format attr='background-color' id='dash-zone_10' value='#dfe7e8' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Player_details' name='federated.1vtddjr1yvcl8k13ibju01vi873w' />
      </datasources>
      <datasource-dependencies datasource='federated.1vtddjr1yvcl8k13ibju01vi873w'>
        <column caption='Economy' datatype='real' datatype-customized='true' name='[Calculation_429249351430565891]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='float(SUM([TOTAL_RUNS])/(count([BALL])/6))' />
        </column>
        <column caption='Strike_Rate_Bowling' datatype='real' name='[Calculation_524950842145861634]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='count([BALL])/count([DISMISSAL_KIND])' />
        </column>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_429249351430565891]' derivation='User' name='[usr:Calculation_429249351430565891:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_524950842145861634]' derivation='User' name='[usr:Calculation_524950842145861634:qk]' pivot='key' type='quantitative' />
        <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='23000' id='5' name='Strike_Bowling' w='42900' x='400' y='53625' />
        <zone h='22875' id='7' name='Economy' w='52200' x='45600' y='78625' />
        <zone h='23250' id='8' name='Dot Balls' w='44500' x='800' y='79000' />
        <zone h='39750' id='9' name='Wickets' w='49700' x='46600' y='35375' />
        <zone h='20125' id='10' param='vert' type='layout-flow' w='36500' x='51000' y='10250'>
          <zone h='6375' id='12' name='Bowlers_Details' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='36100' x='51200' y='10500' />
          <zone h='6375' id='13' name='Bowlers_Details' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='36100' x='51200' y='16875' />
          <zone h='6500' id='4' mode='checkdropdown' name='Economy' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]' type='filter' w='36100' x='51200' y='23250' />
        </zone>
        <zone h='48750' id='11' name='Bowlers_Details' w='45200' x='1000' y='1625' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Batsman_Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842135699457:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[sum:BATSMAN_RUNS:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842134679552:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]</field>
            <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]</field>
            <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Batsman_Dashboard'>
      <viewpoints>
        <viewpoint name='% Runs in Boundries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Batsman_Details'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;CH Gayle&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Batsmen_run'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Batting_Avg'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Batting_SR' />
        <viewpoint name='Sixes Hit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='26' />
    </window>
    <window class='worksheet' name='Bowlers_Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_652740483584176129:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_429249351430565891:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842145861634:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Bowling_Dashboard'>
      <viewpoints>
        <viewpoint name='Bowlers_Details'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;SL Malinga&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Dot Balls'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Economy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Strike_Bowling'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wickets'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='worksheet' name='Batting_Avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Batting_SR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]</field>
            <field>[federated.1vtddjr1yvcl8k13ibju01vi873w].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='% Runs in Boundries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Strike_Bowling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Dot Balls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Economy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sixes Hit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Wickets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BOWLER:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Player of the match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Batsmen_run'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[none:BATSMAN:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Bowling_SR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vtddjr1yvcl8k13ibju01vi873w].[usr:Calculation_524950842287804421:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% Runs in Boundries' width='192'>
      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
      LGnwnyxnVetJpgCvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Batsman_Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batsman_Details' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Batsmen_run' width='192'>
      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
      LgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Batting_Avg' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2daXBc13mmn3OX7kZ3oxto7DuxcV9FaqEkypJseXdiJ+NxnM2xHU/Gqfkx
      mclUqjzJlMY145rKTNXMVM1SFWdRlNV2nNjxyJLsWNRKEgQJYuOGHSRA7Fvvy733zI+GKFHc
      AHQ30GDfp0olEOi+56Bx33vO+c533k9IKSU2NgWKstUdsLHZSmwB2BQ0tgBsChpbADYFjS0A
      m5sYiQhDA1cYn5zFKpDQiC0Am5ssT/Tx1rkBLp15hbd7r938/vzlk5wdC29hz3KHttUdsMkv
      qhvb+NAeD3/3eh/61GnevDBGHYuMBhbwH2/k1ddOoRTX8NUvfYGiB+DueQB+BZtsMzc5itdf
      zMDAJI1lTtp8tQT2PoMx+09o5Ts42FaHeECmSPYUyOYmRSU1hK93c3HWwceeeoydO2sobdxD
      2/GPEx0+ReDAUzR5TaIpgfKA3DnC3gm2KWRyrmMpJZZl5boZG5sNsSkCsAcZm3wl40WwlDHO
      vtFBNBWhpPkonsg1JhbjHH38BH6nyEYfbWxyRpbWAJLxK5coqqxlZmaWnQ3FDEwIdreWA2BZ
      FkLYYrDJP7ISBjUTYVYsB9VOjQVdR3O4wAyh6zqWZaEoCqqqZqMpG5uskoU1gGR+eoLy6noc
      Lifh6TFee72DQF1N5pe2sckxWZgCSdJXEAjx7teAEAjS0x8ppT0C2OQlWZgCCd6b3r//axub
      /OcB2c8rTEzLIpkyt7ob2xpbANuYV88O8/wLr9M/OmvvtWwQWwDbFCklJy+MMbMY4Vt/8RYv
      vNJDOJa0hbBO7GzQbcrscpQb8yG+8atPEksY/NnL3Zy5OMFXPnmYo7tq0VT72bYWbAFsUy6O
      zlLk0GitC+DUVdrqA/zgrSv89++d4dE9dfzqRw9RUeLe6m7mPTnPBrXDoNlHSsl/+9vTaJrC
      73z+sZvft6Rk4PoCf/rjC8wuRfiV5w7w1KEmnLr9nLsb9ji5DQlGkwxOLHB0562bjYoQ7G4s
      55tfeYaff2IXL77Sy7f+4i3GppaxlwZ3xhbANuT67AorkQQHWirv+HOXQ+OzJ3bzn772LJqq
      8Ad/epLvnuwnnjQ2uaf5jz0F2mZIKXnx1R4GJxZ5/stP33exa0nJa12jfOe1i3iLHHz5E4fZ
      31yJotg7lmCPANuSroFpDrVVoa7hJlaE4MMPNfOtrz1Lc00J3/rLt/ijH50nHEtuQk/zH1sA
      24y55Sg35oMcaq1ec4q5EIKKEg//6nOP8Hu//ASXx+f5nf/1Km/3XiNlFvZpPTs8sM3oGpyi
      osRDQ6Vv3e9VFMGR9hra68v4/huX+T8/6OT0pQl+9bkDVAeKCzKPyx4BthFSSs5fnWJfcyUu
      h77h63iLHPzaRw/yza88w8JKlG/80c946fQASaPw8opsAWwjlsNxhiYXObarJuOntaII2uoD
      fPOrz/C5p/bwd29c4psvvMHA9YWCSqewBbCNGJlaIhJLcqClKmvXdGgqn3l8J//5N5/F5dB4
      /s9e529+VjghUzsMuk2QUvLt/9fFjfkQz3/56RxcP93GmUsTvPByN7qm8tVPHVmNNj24z0l7
      EbxNSBom/aOzfORoS06uL0Q6WvT4/gZ2NZTxvdcv8Yd/8w4nDjbyqeM7qShx43bqD5y5gT0C
      bBOuzwb5t//7Vf7w68+xo7ok5+2ZluTi6Cx/+uMLzK9EAXDqGgGfizKfm4CviDKfmzJfEWX+
      IgK+IrxFDjRVRVcVNFVBiPw/IZixAKQZp6vjLKanikPtVZw/dwFXeTMP7d0B2ALIFj98+yon
      L4zyX37rI7gcmzdwJ1IGN+ZDLIfjLIfjLKzEWAjGWAzGWA7HicSThKJJIvEkQgj8Hic+jxO/
      x0Wp10WZv+imYPweJ54iB8VFDjxFDlRF2XKBZPxJLo1ewdN6lLYyJ/Mj/TQefoLFwX6Sson3
      B+oKKbKQC7oGpti3owKnrm7qZ+nQ1LuOOKYlSaQMEkmTRMogFE2ysBJlIRRjYSXKYjDG5fH5
      9NehGFKCrqk4dRWHruL3pAXSVFXCL35oz5p2trNNxgKIxJLcmO1hrCdJc6WfcreOW1FIAIpp
      3vQGfdDmjpvJcjjOyI1FPvVYK6lUaqu7cwu6ArpLxetSKSt2sqOq+K6vDcdSLIXjLIXiLIcT
      LIZiTMwG+c7Jfo60VWzK1O6DZCyA6sZ6RnrHcOg6JZXF9Lz1JtLhpVUIhKbZxlhZYHhqBiEE
      e5urcDgcW92dDRNwOAj4Pbd8L5EyuDa7wqXxRXY23jm7NZdkLADNV8Pjj5YhhYquqZSW1SM0
      B/bzPjtIKekamGJXYzke1/a9+e+GQ9PYu6OC7qFpfv7JXZs+U8g4wCuEQHc4cegaQggcThe6
      fR41a0QTKS6NzXM0C7u/+YgQcLClivHpFYLRxKa3b9+pec7UQpi55QiHWrO3+5tv7GkqJ540
      GL2xvOlt2wLIcy4MTNFU7afM9+AecPd7XTRW+ekbmdn0o5u2APKcrsEp9jdXoWsP9p/qYGsV
      l8bnMczNzUh9sD/VbU46/LnMkfa1H37Zrhxur2Z0aomVyOauA2wB5DE9QzMUux201JZudVdy
      Tn2FD7dTZ3BiYVPbtQWQp6TDnzdWw58bP/yyXSguSgu9e2hmU9u1BZCnhGNJLl+b59iu2gd+
      +gPpAzqHWqvoHZ7BsjZvJWwLIE+5PhtkKRjjcNuDG/78ILsaywlGEkwthDatTVsAeci7u7+t
      tQH8HtdWd2fT2FFdgrdIp390dtPatAWQh5iWpGd4hsPt1Q/k7u/dcOgquxvL6R3ZvHoHtgDy
      kOVQjLGp5VUBFJACgENt1QxPLm6acZctgDzkwtA0FSVu6ivW7/2z3TnQUsnCSoyphfCmtGcL
      IM9Iz/+nCyb8+UFKvC7qKoq5ODa3KdMgWwB5RjiW5Mq1+VXvn8Ka/gBoqsL+5kq6B6c3pT1b
      AHnG0OQiiaTBvubNPxySDwghONBSxdXr8yQ2oQJmQQpAWims+BSQX+eUpZRcGJympbYUv8e5
      1d3ZMpprS3DoKlevzee8rYIUgBnsJjb0LaSxOQuttZJMmfSPzHJ0Z2FOf96l3OemvtxHz3Du
      0yIKTgBSmhjLnWAlMcNXtro7tzC3EmViLsjh9uqt7sqWoiiCAy2V9I3M5jwtImMBSHOFk6/8
      E2+f6yMRDdLx9hv0DFzPRt9ygkwtY4avIBzlmMF+8mka1D00TXXAS3XAu9Vd2XIOtVUzvRBi
      Zim3o3TGArCWpynf/yRPHjvA8uQoNfsfheAs+Vp/xFzpRugB9LJnMKMjSDO+1V26SdfAFHt3
      VGyq8VW+0lYfwLQkIzk+JpnxJ23pfuZ6z/DqoJOdZW78xU5SqkZcSoSRdhi2LAtzk0/63BFp
      kVo8jVp8COk5jJz+AYnQOIo7N36b6yEST3FlfJ6PHG3OO++frWJvUzldA5M8vCt3CYEZCyCe
      MCgt8bMciuMtc9N/ugNT6LQIgdD1vPIFMqNjpIwFHKXHEK4yTGc1SmIYR8ku2GIjl+7hORya
      yp6mym3t/ZNNDrXX8NPOYSyUnI2KGV/VW1ZDq8OL6nDjdmk85KtEc3ryzhdISom5ch7FWYVw
      1QGgFu/DDF9BVn4MIbZu2iGlpGtwiubaUkq8hRv+/CD7myt48ZUeFoMxasvv7jiXCZn7Aikq
      Pn8JniIHQih4i/35OYe1YhjBHrSSxxAi7VysFu/Dio2DEdnSrsWTBhdH5grm8MtaqSz1UFXq
      oXckd+HQggmDWtExZCqI6jt483uKqwahejEjg1vYs7T3z/RimCMFHv78IG6nTlt9gL4c7gcU
      jABSS6dRi/cg9PcZsKpeFHczRqhvy/olpaR7aJq6imIqSh5c75+NIITgcFs1l8bmSaRyU7Kp
      IAQgzShmqB/NfxQh3vuV09OgPVjhQaS1NYFbCVwYnOZga9V9q74XIjsbykiZZs5c4wriEzdX
      ehCKC9W7+7afqZ6dSCuOFduazbtILMnVa/M81F7Y6Q93o7rMS5nPzcWx3ByTfOAFIKWFsXwW
      tXg/Qrt9h1VxVKDoAczw1S3oHfQOz+LzONlRs/ne+NsBRQgOtlbSOzKLaWW/qv2DL4DELGZ0
      FK300Tu/QAjU4r3pcKjc3NKgtx5+t8Ofd+NgaxXj08s5cY17oAUgpcQIXkDofhR3811fpxYf
      wIpdQ6ZWNrF36fBn/+gsD++2w5/3YldDOYmUyfh09tcBD7QAkCbGShdayTHu9asqrlqE6sSK
      jm5e34Cx6WWWw3EOFZD3z0Zwu3Raa0vpHc7+OuCBFoAVn0AmZlH9D937CasWobhbMUP9m9Y3
      KdPWJ3XlxZT77fDnvVCV9Cmx7qHprJ8TfqAFYCx3oBY1oTjv/YQVQkmvA0KXkXJzkvYM06Jn
      aGa18os9/bkXQgj2NVcwMRfM+jpgTQIwjRSGYWKYVh5lz98bacYwg72oJUfXlOejuluRMrVp
      4dCVSIKRG0scaa/ZlPa2O41VfnxuJ/0j2Z0GrUEACf7+hf/JD350kpdeOZPVxnOJGb6CNGNo
      /ofW9HrhrEJxlGGGLuW4Z2l6h2coLXbRUFl43j8bwed20lpXSvdQdt0i1iAACwuF0f5uInJ7
      zJiktDBWulC9uxDa2rIIhVBQvXsww5eRMvvx5g/SNTDFzoYyvEV26vNaOdhSxZVr8ySS2QlX
      Syu1FgE4efzpj3L08WMc2VVN0sj9zZEp0ljBDF1CKz2+rvepxQew4jeQydwWaYgn0uHPQj/8
      vl4Ot1cztxxlcj477tEyObsWAUR487VzuPQ4P/nhd/jJO8NZaTyXmKGLCNWF6m5d1/sUdxNA
      OkU6hwxMLGCaFnt2VOS0nQeN2rJiit0OBq5n5wFlLHetbQQocqSYnpmnvKkBmdj8Wq7rQUqJ
      sXQGtfggqOsMLwod1bsTM3QpZ7Z872V/+qiww5/r4t2awtkoovGuO8gaBODg6Y89R1VtM48/
      /lE+89y+jBrONTIxjRWbQCs5uu7pxbuHZMzwZchRWkTKsOgdnrEPv2wAIQSH26u5PJ55erQV
      GUKa4bUIIMSPf/gDLl8YpPfKOPluWG+sdCEcAZSiHRt6v+puRZpRZCI33pRzyxGuzwY5stM+
      /LIR2uoCxJMGk3OZrQOMlfMoRQ1rGwFqduzEpS8TCcXu+ArLSLISiiClxdL8LKFN8nb/INKM
      Y650oZU8glA2dixTOCpQnNU5OyTTNzJLma+IunI7/LkRKkrc1FUUc2FwasPXkEYIM9iPVnp8
      bWFQd3E1n//Sb/H5zzx++2F3KZkY7uadjiuszAxzaWSSc+d72IpYkRW7hpWcQ/Mf3fA1hKKh
      enel9wNysA7oGphiX3MlTn3rXTK2I7qmsrepgp7hjVeVNyNDSCuGVrx/ba4QY50/4fzlPnbv
      e5gPH997iwiM6ALL0ke13yK0EGfP0cMs9/USlpKiTfYFMpfOIlzNGBRDcuOjkOVqx1o8RTI6
      C3r2avQmDZO+kVl++7MP5Yf3j7QAE6SZ3vuQKYQZBTMEZhisSPprvQrpakmfpxBbX7NgT1OA
      N7rHmF8ObSiN3FzsQHj2krL0tQigiI994ZeIKV4cjtsbG716lZlglOnxFR4+2oK5EmclmaJB
      CPRN9AWSVgIj1I1e/YvozswKy0ltF9EbEiV1Hc2TvUzN/rEpHLrKnh1VufP+kTJ9rsGKI804
      0oqDGUOaEaQRet9/QaQZBTOSXvOYUTDjoOgIpQhUF0JxgeJAps4jU0sorhoUdzOqZydKUQPC
      UY4Qmz+S7WuuxrAk47Mhju1an12KNEKkIpdwNv4mmsO5FgFEePWlf8RTeQBpqfzcZ5+65aft
      Dz1BOymuX1ugpspLd9c53NVtbPZzwgxdBpQ7HntcL0JxoHraMMOXUP3rjybdCSmha3CKpio/
      Zb6ijK8HYCXmMFa6brmxMYNpu0dpIK0UyFQ6oqU4EVoxQvMhNC9C86E4q1f/Xbz6nxcUBwgd
      oejp/wsNaUaxkrNYkSHM8FUSy38FCBRHAMXdiurdheppB9UDiJxHt4rdTpqq/BvaTDSC3QjN
      d3OPaA0CcFDqL6K3u5Pdz3zyLq/RaWhMRzWOHT+x5s5ki3Ts/xSKdw+KIztHC1XfAVKzPwEr
      DmrmN2zSMOkZmuG5Yy1ZEpQkceOvkfGZ9HkGrRhRVP++G3z1plZXv1Y2/kgSmgdVa0Z1N6NX
      PIeUBlZsAjN8FSsySPLG95BGCMVZhbIqBqWoAaH5M2r3rv0RcGRnNWcv3yBlWDjWuJ6S0sJY
      6kDzHUJoHmBNAjDRVT9NB+s5fqgtk37nDJlawIyO4Kz/DbJlcah62kka38VKzqEWNWZ8vcm5
      IDOLYY7uzE72pxWfwIqO4Wr6Oqp3Z1auuVaE0FDdO1DdO0B+FGmGsRIzmJFhrMgAiaUOwEJx
      VKF4WtJTJvcOFD17554PtlTx/dcvsxSOU1XqWdN7ZGIKKzaBo+YXb35vTSPAkccf59TrL/P9
      l97ht7744Y32OUdIzGBf+o9SnPn0512EXorirMEMXcxYAFJC/+gsZX43NVmw+JNSYiy8geKq
      Q/Fs8UNJCIRWjKoVp/dQKp4DK4kVn8SMDGCFB0gun0PKVNqAwNOO6t2dHiFUz4ZHiLpyH163
      g6vX5tckACklxko3il56yx7RGgSQ4HL/Vdof/SQnyvPPuUBaBsbKeTT/saz6ewrFsRoOvQiV
      n8joWpa0uDA4nbY+yULfZGoBI9iNs/aLt/gcbTlCIBCgulA9raieVqj4eHoNEZ/AjAxhRYZI
      LncirQSKqw7V04bibkE4yt6bvq1hYe126bTVBegZmuGpQ03375tMYaxcQCt95JYp6D3vGGkZ
      TAwPMjkzzquvvcmTn/sizz2cvadsNpDJOazYOI6af5b1ayve3aQW30Kmggh94xtXkXiKK9fm
      +czjOzOe/0spMZY7EaobtTi/01KA1RHCk14oe3elT9wZkdUp0wBm+AqphTfTrxM6KA6EowzF
      UY5wVKb/76xA0ctB0UEogIKipN0i/uGtK1hSotznc7Xik8jkHJrv8C3fv6cAwguD/PkL/8jj
      n/4Yh1J+jh/bnXeuz8byWRRXPYqrNuvXVt07EIoDMzKwerB+Y1wam6PIodGcDe8fmcJYeB29
      /DmEuv2sVIRQQfeh6j5UbztUfQppGcjUEjK1gJVcQCbmsFJzWCtdGGYEaUbATKRHB0d5OtXF
      UcG+gIszRdPMzYxSWVYOmvuuswBj6QyquxnhvDUD954CKC7fzb/5va8zOjLCtFzm9JmLPHd8
      X96IQFoGxvJ5tLITCCX7cXWhulGKdmCGL2ckgK6BKVrrAvi9me1PAJgrF0BKVP9DbHVNg2wh
      FC19YzoreP/kR0prdQ8jijTDyOQCVnIOmZjDjI5QYS3wuycWUeb6iC150msKR2k6ncVR8d5I
      onoxg73olZ+4TSD3njQLgdtXxr7DZew9dIzrfZdYMS1K8sTD0ooMIM0omu9IztpQfQdIzf0U
      aUYR602v5r3w5+dO7L7vMH0/pJUitXASteQYIos71PmKEApontWQZQWsejulU9UlSItv/+gs
      ieg8X/9Uc3o6nJxHJuZIhS6lxSNTYKVAcaL6Dt3WxppXjUII5oZHEHt3kw9LYSnN9LDm3Yni
      KM9ZO6p3D8mp72PFJtND9jq5em2BWCLFobZMsz8lZqgPmVxEb/hKQadSp393AULhYHsj3/7R
      PCHRRmn5gZuvkVKCGUUaK0gjCEJD0f23XWsNj3KJtCwsy0J3uciXFC6ZmMEIdqNXfCynKdpC
      L0V1t2GsdK77kIyUkrd7x2mvD2Rc+VFaSVIzP0IrO4HiLMwq8nficFs1iZTB5fFbi2qL1cW3
      4qpF9e5GvUu4eA0CSPLj77zIX//lC7w1MszSzNZWU3kXY+U8irMaZbXcUa54zzPoEustqRpL
      GFwcm+PY7rqMNWqGLmGlgmglj2V2oQeMdF21ig2bZq3JFiVslfPLX/g0lRUernQMbKCbWUbK
      tOOz/8im1PZSPW3p5LHk+jxpphfDzCxFONiaYUKdlKTmT6L5DiIcZZld6wFDiHRR7Utjc5gb
      OCa5BgEUc3SPjz958R9p33eEg4+s76B5LjCjw8hUKL343YS5sHBWIxwVq4W1107XQDr5rdyf
      WS6RGR3Gil9HK3s6vza+8gAhYF9zJdOLYeaWo+t+/5pGgN7eQTweN4thlbb6rY8+GEsdKO4d
      iE2aCwvl3cPyF9d1SKZrYIr9zZU4tI2vnKS0MBbfRilqQslCTtKDSE3AS2WJh74NFNNb0+NE
      8QR4+umnObSrYd0NZBtphNLljkof3dSnoerdhxWfxDLWZtG9HI4zMrXE4fbqjCI2MjmPEexF
      L3+2oCM/96LIqbGzoWxD64D73EEW4VCYErfCO++8w8WhyQy6mR3M8NW05eEHtrRzjeptR1oJ
      rOi1e75OSlgKxfirn/ZSXOSgtTazEdNYOoWiB1C9uzK6zoOMEIKDrVUMXl8kllifW8R9VpAW
      szdmeXdtsdXGuGnLw/OovgOgZL6ruh6E4kTxtGKGL6P6Dt72NJYyHfY81X+dv/xpL5Yl+Rc/
      dzQj60NpJjAW30Gv/CRC2BaK92JfcwWhWIJrsyvsblz7vtB9BKBSUeWmp8/LU0/u4Fz3XIbd
      zIx3LQ9dTb+1JdMBrfhAOnFLJkG8l4cjpWTkxhIvvtrL0OQin3isjV84sQe3K7PDIMbyGRB6
      Og3Dnv7ck6rS9Drg4uhsNgVgMnr5In39VxBqiB0H7lJna5MwV3pWyx3t2JL2Vc9OklN/j0wu
      Ilzpgy2haIIfvHWVV84OsauxjG9+5WlaagMZ36/SSj/9tZJjazb4LXQOtFbRPzrHZ5+0UNeY
      rnMfAWgcPP5hvJVHaGkp4/r1pdteIU2DYCiM5izC7dKJhEOoDg9FzuzG59PVHtPH2VCyc6Z2
      vQhHOYqzCjN0EVOrpPPKDf78lR6EgK9/9hiP7a3PWq1fM3wVKzGNs+lfZuV6hcDhtmre6hkn
      HEuuOfHwPnepwYW3XuH7P77MwcP1SG87/7zx1pyWeHCO4bFplkIxDrdVcnFkHgONZ548ltVc
      RSs+gZWYxlH7S1sWDRGqE8XTRnCum//7soNLY3N84tE2fu6JXVnJ9HwXKU2MhTdQfYcLIukt
      W7TUlmBJyej0MofXmHt13zXArsOP8/N6M43NNXj9t6fBuUqqURNXKPJUElmMsv/4oyz19hLK
      si+QtXQetACmVoWZgedPJkQTKfqvFdOijqNae/n9X3uC1roAAkhms0+JG5jhAdSG384P/6Bt
      gltXaKz00T0wxd7GwJrecx8BCNzFxQx1v8A/vSJpeuRDfPGTt+aipJIJ9j38JL3nujBcOuFQ
      grBpZNUXSJoxYqEeHIET6I7Njf4ApAyTc1en+POXu/E6U3zjhMq/+1wtmj8H/p5Skph5E9XT
      gtPXvmGLx0LlUFs1HZcm+ZJ+eE0zhTVZI7pKGqgud5II3r7VnAjNc/rtU6ScPmqb25jq70Dx
      V5HNoF26hu8Sqv/2fO5cMzkX5L/+7Sn+x/fO8Ni+er7xpY/j9jVjhq/kpD0rtYgZ6kMLnLBv
      /g2wd0cFM0sRFoJ39rH9IPf8hM1khJOvvkxpYxMLs9O077k9D6i4vJ4TH6q/+e9Hn/zQOrt8
      f9J5/7s2dT4ciiZ46fQgPzo1QFtdgG997VlaaksRQpBKHsBYfBtpxhFqNuf+EmPpNKhFqJu8
      0feg0FIbwKGrXB6f48TB+x+Wv+cIEF64hlHUQuRiL0//+i8zPziy6Zth0oxhBHtXXR9yfxrB
      NC06Lk3wjW+/xmtdo3zlk4f5/V8/kZ7rrw6pqncPVmIOmZy/z9XW23gUY+kMeuBD9tN/g3hc
      Om11ay+qfe9PWbHoP/UzYrElhr7zPRyuzfegMYN9acfmLHr+3AkpJdOLYV54uZve4Vk+cqyZ
      X3hqDyVe121zSeEIoDgrMCMDKEX1d7ni+jFDvWAlUUs27m5tA4daq/nJuWFiiRRFzntvRt5T
      AP6qffzuf9g66413Y/+qdz9Cy52ffiia5OWOQX749lVa60r5j195mvb6wF0XUUI4UDw7MYN9
      6OXPZqUPUpqk5l9DK3kYod1+dM9m7Rxqq+LFV3uYXYrQVH3vA7x5Pc7K5DxmdARXjjaDLCnp
      HpzmxVd7WIkk+I2PH+Kpw0049fsFxwRq8R4SS6eRZiIr9iRWeBArOY+j/jfsrM8MqSzxEPAV
      ceXa/PYVgJQSM9iDUL0onuwewpFSMrUQ5sVXe+gZmuGZh3bwhWf343M71nzzqUU7EIoTM3IV
      zXcww/6YpBZeQ/XuyYm/UaHh0FX27qjgwuA0H3249Z5/0zw+XmRhLJ9b9ePJ7uJ3cj7Ev//j
      1wjHkvzBl57ia59+CL/Hua4nr9B8KK76rFSWt+I3MMNX0cuesZ/+WUAIwcGWKi6O3v+YZN6O
      AFb8BlZiCkf9r2T9pqjwu/nXn3+MPY3la7bWvg0hUH37MBbfQVrJDRtzSSkxFt9JG92u+t7Y
      ZE5bfQDTshidWqa9/s67wsvheP6OAMZSR7qKnzP7UwKnQ+NQa9XGb/5V1OL9WMk5rMT6j+Ld
      xAxjLHegl9mhz2xSHfBSHfDSM3Tnap9SSr578mJ+CkCaCcxgD5r/aF7fFMJRgdD8WJGhDRbU
      Sxf1FloxavH+rPevkNFUhb3NFfQOz9x2TFJKuDw+z+sXxvJTAGbkKtIMZ1TtcXMQqMX7MUP9
      yA1sEUozRmrhLbTSJ25WLLHJHkfaqrk2u8LiB9IiIvEkf/LSBR7bW59/ApDSwlw5j+ppR9zB
      yi6fSFeW34sZHUmXUlonZrAfaYbQA8dz0DubPU0VROMpxmdWbn5PSsmPzwyyGIrxK88dyD8B
      YEYwQ5fQSrfHTaEUNSCEjhUZWdf7pJUitfjm6saXXTQ7F7hdOm31gVumQddng4h2+zcAAAmm
      SURBVPzDm1f4tY8eJOArykMBKE70qk+jevdudU/WhND8KEUNGKH1mWZZ0TGs2HX0wOYXFSwk
      DrVWc3FsDsO0SKRM/vilLva3VHLiYCNCiPwTgFAc6YjINin+IISC6t2DGb6Srn6yBqSUpBZe
      T2e42htfOeVgSyXj08sEIwlOdo0yNLnIlz9xGH3VrCzvBLAdUb27096h8Rtrer1MTGOGL6WF
      vgWFpguJugofJV4XP+sa5W9+1s8vPbuf2vcVKrQFkAWEqxahujEjQ2t49WpNY0c5isc2u8o1
      XreDHTUlfPfkRWrLvDx3rOWWn9sCyAJpC/V9mKGL6bI+98BKrWAsd6KVPZPXexwPCooQHGmv
      QddUvvzJI7elR9t/gSyhFu8jOfEXYIThHhUlzZUuQEHz2ye+NounDjXRXF1Ce/3t1vL2CJAl
      lKKm9B5G/PpdX5PO+T+JFji+Zd5GhYjHpbO7qfyOZmUZCyAVXaLjnTc5deESiegKZ95+g+6r
      9zaQfRARmhfVveOeNQTMYG+6qF/JY3bWZ56Q+QigODj48OMUq0lmxkaoO/AYIjTP1jj3bB1C
      qKje3ZjhS3fMC0rn/L+xWuUld0X9bNZHxmsAzeFg/MpVympbkDNjuDwOkqpCXEpEFo2xtgPS
      1YpMvUQifA3hrLnlZ1Z0GCsyjNr8u7bZVR6RsQCWRvsYmEtRnZqkqdJN3+nTWIqTFiEQWTLG
      2i5IrQFT96MkRtCL37PkkNIiGepA8bSiexrt6U8ekbEA/I37eKI8DkLF63XzSHEVqrPoAalh
      vj6EoqN6dmGGLq7W80p/CjK1iLFyAWfjVwvyc8lnMl4DqLoTv9+P3+dFVRTc3uL7Hyp/gFF9
      +7Fi15HGexmIxsLbKM4qVM9O2+c/z7DDoFlG9bQhrThWPF1OShqRtK176fGsusjZZAdbANlG
      caF62tK5/lJiLHcCFlrp1hYXsbkztgCyjBBiNRx6BawYxtIptJJHEap7q7tmcwdsAWQdgeLd
      lS5vunQaKzGLZuf85y22AHKA4qhCOMpJTv8AzXcI4bg9B8UmP7AFkAOE6kD1tIGUaIEnN7Wg
      t836KNx4ZU4RaIHjCMWRdVtHm+wi5Hpry68Ty7KQUhbETrDN9sMem20KGlsANgWNLQCbgsYW
      gE1BYwvApqCxBWBT0NgCsClobAHYFDS2AGwKGlsANgVNxgKwklH6+rpZCCYwEmE6T71J/9Bk
      NvpmY5NzMhaAtCyKA8WkoikWrw9TufthUktT2MYfNtuBjLNBVZcXX9ESySSkEoJivwtT14lJ
      CQXmC2Sz/chYAMnwIoODIxhGgPZmF5c6u0iZkuYC9AWy2X5knA5tJKIsLIcAlUB5KdGVJTS3
      H48rbUNtp0Pb5DP2eQCbgsYOg9oUNLYAbAoaWwA2BY0tAJuCxhaATUFjC8CmoLEFYFPQ2AKw
      KWhsAdgUNLYAbAoaWwA2BY0tAJuCxhaATUFjC8CmoLEFYFPQZFUAieAMr/30J7zZeZGcHjKw
      sckSWRXAwuQU+596jkotRTybF7axyRFZnwIJAQLsEcBmW5BVAQTqqul9/afMGDpF2bywjU2O
      sM8E2xQ0OasSKaXEWPUFklJiWVaumrKx2TB5OQK86yW0VkzTRAixrvest41UKoWmaQghctqG
      rutrfr2UEillztsA1vx7b8bfwjAMVFXNyt8iL+sEr+fDKOQ2hBDrugk22kau2cq/Rc5HgPU+
      QQq9jVzfcLluY7v9LdTnn3/++Yyvcg/u9ZQyUxEudJzl6tA4pRVl9HaeYmwmTG2lh84zZxif
      XqayxMmZM2cZm1qkuroKTbn9WvdqIx5e5PzZTkYnZikrTV93ajFOVanG22+eYjaUoliN0XH2
      AgsxSU1F6bp/j/DiFJ2d55mcD1PmkbxzqoOlhIpPTdDRc5mK8ioSK1Oc7jhH0HBQVea7axt3
      Y/b6AOcv9LEUV3Ak5jhzrgvTGUCGpjh/eZymumoWp8e50DdKdUMNd5tw3r0NyY2RK3T19hM2
      nMjQBJ1dfQh3GTMTl1iMuClxJTnX2cnA+BQVVdU4tNufqvf6nJKxZbo6Ohm+NkVJiYeujjPc
      WEpR5dfo7usBrRQ9tcipjnOMTa/QUFeFcodr3auN0MIknecucGM+Sqnb5J1THQSTOl4lxvm+
      S5QEqnHqCjeGuxiYsnIvgHshhEJZVS1ec5nJaIryqjYqxBzX5lMEGpsJ6FGC80sYJU34RBRP
      STlOfX3RJKFoVNU2oETmmV6O07hzH3pilpnrCzQcexRz6QbhxWXK2/cTnRwn0FC/7nmhojmp
      a6gnujTP/FyIvY88yvL0OFU1jUgrgdftZ2ZijOZDj7IyMUKg5u436N3QXV4aGqqZm1sgFIpw
      9NFHuT4yQOOOFqLhEJUVFWiOIoxoCF9FxYbmtk63j4b6amZnbhAJSx46doBr166zc1cVCzMW
      5ZXFVFTXo6XCqG4/buf6WhGKRmVtHXp8kYlgnKbWfbjiN7CK6yn1CZJRB6XlfirKAyzMzlFT
      V4u6zqe8qruoq68nujTH9GKII488wsr0GKXVTWgyjrOoFDW1wrWFBcyoc6tzgQQzkyMkfDuo
      dUs0Xcfp0IinLJy6hq7rWKKI5NIES8FEeodtnShYXBsbxFndhs8pcGkamqaRTIHLoaEpKjXt
      uwheH2J2foWNeFgr0mBoaIjKpnZ0TcGpqSiKQNF0NHX1I5YKuqagC7GhNqxkhKvDE+zc2Qaq
      uroIlOgOJ+8Oiu//ev0IjNgKV4dvsHtPO0LV0VQNkDef9IoiuDE6hFZSQ6DYtYEWJBPjQyjl
      LZS7QNc0dF3FRLnZhhCCyWujKJoTawO/i7BSDA8PUdW8C4em4FBVVFWgqPrq7EFyubcbw4LZ
      udmtHQHiwUneeKuPRCKIv7yGwb5OJpbhyP56ujvPMbOUoL7ax7WpOZLxFDVNDRStcwSYv36F
      rovjRKNhairL6Oo6z0pMYf+eak69fZao5aAh4GJk/DpaoJb2usp162ysv5Ork8uEIhEaK9yc
      OtuFqfnwKSFOd3YzvxinqqaIC+e6SbkCNNdWrLuNC6dPMh9KEIyZlOsxOrv7KSpvJLUwxrme
      i8QsJ2ZwkvMXLhIyNGoqy9cnBmlx/u3XWYwmCCcVvNYiXf0D+CqbuDZ8mcuXr+NxRDh35TqJ
      UBh/ZSVF+vpGgJWZYc50DRGLhSkvK6O/p4vFmE5juUZHRyfj1xZxuVJM3pgnGIzR2LoDfZ0j
      wOjFTgYnlohEItSXFXGq8wKGVopPrNBxrpupxSS79rbi0k2WlyX/H3TnC43B/+dFAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Batting_SR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bowlers_Details' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bowling_Dashboard' width='192'>
      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
      50FYccC2yQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bowling_SR' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dot Balls' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player of the match' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sixes Hit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Strike_Bowling' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wickets' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
